<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Soholife.Common</name>
    </assembly>
    <members>
        <member name="M:Soholife.Common.ExtendFun.ExtendBytes.GetString(System.Byte[])">
            <summary>
            获得String类型数据
            </summary>
            <param name="bValue">字节数组</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ExtendFun.ExtendBytes.ToInt32(System.Byte[])">
            <summary>
            获得String类型数据
            </summary>
            <param name="bValue">字节数组</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ExtendFun.ExtendBytes.ToObject``1(System.Byte[])">
            <summary>
            Byte数组转对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="bValue">字节数组</param>
            <returns></returns>
        </member>
        <member name="T:Soholife.Common.ExtendFun.ExtendString">
            <summary>
            字符串处理扩展类
            </summary>
        </member>
        <member name="M:Soholife.Common.ExtendFun.ExtendString.ToBytes(System.String)">
            <summary>
            获得Byte类型数据
            </summary>
            <param name="sValue">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ExtendFun.ExtendString.ToBytes(System.Int32)">
            <summary>
            获得Byte类型数据
            </summary>
            <param name="iValue">数字</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ExtendFun.ExtendString.ToMD5(System.String)">
            <summary>
            获得MD5密串
            </summary>
            <param name="sValue">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.CardIDUtils.GetMaskCardID(System.String)">
            <summary>
            得到身份证信息的掩盖显示
            </summary>
            <param name="sCardID"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.CardIDUtils.GetMaskCardID(System.String,System.Int32)">
            <summary>
            得到身份证信息的掩盖显示
            </summary>
            <param name="sCardID"></param>
            <param name="iLen">正常显示的长度</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.CardIDUtils.GetBirthday(System.String)">
            <summary>
            通过身份证，得到用户出生日期
            </summary>
            <param name="sCardID"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.CardIDUtils.IsCardID(System.String)">
            <summary>
            判断身份证号码是否有效
            </summary>
            <param name="personalid"></param>
            <returns></returns>
        </member>
        <member name="T:Soholife.Common.CommonUtils">
            <summary>
            通用项目文档
            </summary>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetBooleanValue(System.String)">
            <summary>
            逻辑类型转换
            </summary>
            <param name="sValue">传递需要转换的字符参数</param>
            <returns>将指定的参数转换成bool类型值返回</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetBooleanValue(System.Object)">
            <summary>
            逻辑类型转换
            </summary>
            <param name="oValue">传递需要转换的对象参数</param>
            <returns>将指定的参数转换成bool类型值返回</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetBooleanValue(System.String,System.Boolean)">
            <summary>
            逻辑类型转换
            </summary>
            <param name="sValue">传递需要转换的字符参数</param>
            <param name="bDefault">默认值</param>
            <returns>将指定的参数转换成bool类型值返回，如果异常则返回默认值</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetDateTimeValue(System.String)">
            <summary>
            日期转换,如转换失败返回当天日期
            </summary>
            <param name="sValue">传递需要转换的字符参数</param>
            <returns>将传递的参数转换成日期类型返回，如转换失败返回默认日期</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetDateTimeValue(System.Object)">
            <summary>
            日期转换,如转换失败返回当天日期
            </summary>
            <param name="oValue">传递需要转换的对象参数</param>
            <returns>将传递的参数转换成日期类型返回，如转换失败返回默认日期</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetDateTimeValue(System.String,System.DateTime)">
            <summary>
            日期转换，如转换失败返回默认日期
            </summary>
            <param name="sValue">需要转换的字符串</param>
            <param name="dDefault">默认值</param>
            <returns>将传递的参数转换成日期类型返回，如转换失败返回默认日期</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetFloatValue(System.String)">
            <summary>
            float类型转换,如转换失败返回0
            </summary>
            <param name="sValue">需要转换的字符串</param>
            <returns>将传递的参数转换成浮点类型，如果转换失败返回0</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetFloatValue(System.Object)">
            <summary>
             float类型转换,如转换失败返回0
            </summary>
            <param name="oValue">需要转换的对象</param>
            <returns>将传递的参数转换成浮点类型，如果转换失败返回0</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetFloatValue(System.Object,System.Single)">
            <summary>
            float类型转换,如转换失败返回默认值
            </summary>
            <param name="oValue">需要转换的对象</param>
            <param name="fValue">默认值</param>
            <returns>将传递的参数转换成浮点类型，如果转换失败返回0</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetFloatValue(System.String,System.Single)">
            <summary>
            float类型转换,如转换失败返回默认值
            </summary>
            <param name="sValue">需要转换的字符串</param>
            <param name="fValue">默认值</param>
            <returns>将传递的参数转换成浮点类型，如果转换失败返回0</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetIntValue(System.String)">
            <summary>
            Int32类型转换，如转换失败返回0
            </summary>
            <param name="sValue">需要转换的字符串</param>
            <returns>将传递的参数转换成整形，如果转换失败返回0</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetIntValue(System.Object)">
            <summary>
            Int32类型转换，如转换失败返回0
            </summary>
            <param name="oValue">需要转换的对象</param>
            <returns>将传递的参数转换成整形，如果转换失败返回0</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetIntValue(System.String,System.Int32)">
            <summary>
            Int32类型转换，如转换失败返回默认值
            </summary>
            <param name="sValue">需要转换的字符串</param>
            <param name="iDefault">默认值</param>
            <returns>将传递的参数转换成整形，如果转换失败返回指定的默认值</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetlongValue(System.String,System.Int64)">
            <summary>
            long类型转换，如转换失败返回默认值
            </summary>
            <param name="sValue">需要转换的字符串</param>
            <param name="iDefault">64默认值</param>
            <returns>将传递的参数转换成长整形，如果转换失败返回指定的默认值</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetIntValue(System.Object,System.Int32)">
            <summary>
            Int32类型转换，如转换失败返回默认值
            </summary>
            <param name="oValue">需要转换的对象</param>
            <param name="iDefault">默认值</param>
            <returns>将传递的参数转换成整形，如果转换失败返回指定的默认值</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetStringValue(System.Object)">
            <summary>
            得到字符串记录
            </summary>
            <param name="oValue">需要转换的对象</param>
            <returns>将传递的参数转换成字符类型返回，如果传递的参数为空则返回""</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetStringValue(System.Object,System.String)">
            <summary>
            得到字符串记录
            </summary>
            <param name="oValue">需要转换的对象</param>
            <returns>将传递的参数转换成字符类型返回，如果传递的参数为空则返回""</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetDecimalValue(System.String)">
            <summary>
            decimal类型转换,如转换失败返回0
            </summary>
            <param name="sValue">需要转换的字符串</param>
            <returns>返回decimal类型，,如转换失败返回0</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetDecimalValue(System.Object)">
            <summary>
             decimal类型转换,如转换失败返回0
            </summary>
            <param name="oValue">需要转换的对象</param>
            <returns>f返回decimal类型，,如转换失败返回0</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetDecimalValue(System.Object,System.Decimal)">
            <summary>
            decimal类型转换,如转换失败返回默认值
            </summary>
            <param name="oValue">需要转换的字符串</param>
            <param name="fValue">默认值</param>
            <returns>返回decimal类型，,如转换失败返回指定的默认值</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetDecimalValue(System.String,System.Decimal)">
            <summary>
            decimal类型转换,如转换失败返回默认值
            </summary>
            <param name="sValue">需要转换的字符串</param>
            <param name="fValue">默认值</param>
            <returns>返回decimal类型，,如转换失败返回指定的默认值</returns>
        </member>
        <member name="M:Soholife.Common.CommonUtils.GetDecimalValue(System.String,System.Decimal,System.Int32)">
            <summary>
            decimal类型转换,如转换失败返回默认值
            </summary>
            <param name="sValue">需要转换的字符串</param>
            <param name="fValue">默认值</param>
            <param name="iPointNum">小数位数</param>
            <returns>返回decimal类型，,如转换失败返回指定的默认值</returns>
        </member>
        <member name="M:Soholife.Common.SymmetricMethod.#ctor">
            <summary>  /// 对称加密类的构造函数  /// </summary>
            
        </member>
        <member name="M:Soholife.Common.SymmetricMethod.GetLegalKey">
            <summary>  /// 获得密钥  /// </summary>  /// <returns>密钥</returns>  
            
        </member>
        <member name="M:Soholife.Common.SymmetricMethod.GetLegalIV">
            <summary>  /// 获得初始向量IV  /// </summary>  /// <returns>初试向量IV</returns> 
            
        </member>
        <!-- 对于成员“M:Soholife.Common.SymmetricMethod.Encrypto9(System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Soholife.Common.SymmetricMethod.Decrypto9(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Soholife.Common.DateUtils.FirstDayOfMonth(System.DateTime)">
            <summary>
            取得某月的第一天
            </summary>
            <param name="datetime">要取得月份第一天的时间</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.LastDayOfMonth(System.DateTime)">
            <summary>
            取得某月的最后一天
            </summary>
            <param name="datetime">要取得月份最后一天的时间</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetTime(System.String)">
            <summary>
            通过时间字符串，字符串格式为yyyyMMddHHmmss，得到时间
            </summary>
            <param name="sTime"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetHours(System.String)">
            <summary>
            判断特定数值是否符合时间的 HH:mm的格式，组装成相关记录信息
            </summary>
            <param name="sTime"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetShortDate(System.Object)">
            <summary>
            
            </summary>
            <param name="oDate"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetWeekStartDate">
            <summary>
            得到当前传入日期所在的周的第一天
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetWeekEndDate">
            <summary>
            得到当前传入日期所在的周的最后一天
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetDateInfo(System.DateTime)">
            <summary>
            得到时间的文字提示日期，例如几分钟前，几小时前等等
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetWeekStartDate(System.DateTime)">
            <summary>
            得到当前传入日期所在的周的第一天
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetWeekEndDate(System.DateTime)">
            <summary>
            得到当前传入日期所在的周的最后一天
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.DayOfMonth(System.DateTime,System.Boolean)">
            <summary>
            获取每月的第一/最后一天。
            </summary>
            <param name="time">传入时间</param>
            <param name="firstDay">第一天 为 true， 最后一天为 false；</param>
            <returns>返回当前月份的第一天或最后一天。</returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.DayOfQuarter(System.DateTime,System.Boolean)">
            <summary>
            取每季度的第一/最后一天。
            </summary>
            <param name="time">传入时间。</param>
            <param name="firstDay">第一天 为 true， 最后一天为 false；</param>
            <returns>返回当前季度的第一天或最后一天。</returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.DayOfYear(System.DateTime,System.Boolean)">
            <summary>
            取每年的第一/最后一天。
            </summary>
            <param name="time">传入时间。</param>
            <param name="firstDay">第一天为 true，最后一天为 false；</param>
            <returns>返回当前年份的第一天或最后一天。</returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.ConvertDateTimeInt(System.DateTime)">
            <summary>
            转换时间为一个double型数字串，起始 0 为 1970-01-01 08:00:00
            原理就是，每过一秒就在这个数字串上累加一
            </summary>
            <param name="time">时间</param>
            <returns>double</returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.ConvertIntDateTime(System.Int32)">
            <summary>
            将1970-01-01 08:00:00的时间上加seconds秒
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.StrDateDiffHours(System.String,System.Int32)">
            <summary>
            给定的日期时间累加上给定的小时数，与现在相差的小时数。
            </summary>
            <param name="time">给定的日期时间字符串。</param>
            <param name="hours">累加的小时数。</param>
            <returns>返回与现在相差的小时数。</returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.StrDateDiffMinutes(System.String,System.Int32)">
            <summary>
            给定的日期时间累加上给定的分钟数，与现在相差的分钟数。
            </summary>
            <param name="time">给定的日期时间字符串。</param>
            <param name="minutes">累加的分钟数。</param>
            <returns>返回与现在相差的分钟数。</returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.StrDateDiffSeconds(System.String,System.Int32)">
            <summary>
            给定的日期时间累加上给定的秒数，与现在相差的秒数。
            </summary>
            <param name="time">给定的日期时间字符串。</param>
            <param name="sec">累加的秒数。</param>
            <returns>返回与现在相差的秒数。</returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.StrDateDiffDays(System.DateTime)">
            <summary>
            给定的日期时间距离现在的天数。
            </summary>
            <param name="date">给定的日期时间字符串。</param>       
            <returns>返回与现在相差的秒数。</returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetYearDays(System.Int32)">
            <summary>
            获取一年一共有多少天
            </summary>
            <param name="iYear"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetXingZuo(System.DateTime)">
            <summary>
            获取星座信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetTimeByMinute(System.Int32,System.String)">
            <summary>
            根据分钟数获得日期时间格式字符串
            </summary>
            <param name="iDayMinute">天总分钟数</param>
            <param name="sFormat">日期时间格式</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetTimeByMinute(System.Int32)">
            <summary>
            根据分钟数获得日期时间格式字符串
            </summary>
            <param name="iDayMinute">天总分钟数</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetNumByTimeToMinutes(System.DateTime)">
            <summary>
            获得总分钟数
            </summary>
            <param name="dTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.DateUtils.GetMinutesByTime(System.String)">
            <summary>
            给定的HH:mm 返回第几分钟
            </summary>
            <param name="sMinutes"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.Thumbnail.SavePic(System.IO.Stream)">
            <summary>
            通过图片流，存储缩略图
            </summary>
            <param name="fileStream"></param>
        </member>
        <member name="M:Soholife.Common.Images.Thumbnail.SavePic(System.Drawing.Image)">
            <summary>
            通过特定图片对象，存储缩略图
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:Soholife.Common.Images.Thumbnail.SavePic(System.Drawing.Image,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImage">源图文件</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="mode">保存模式</param>
        </member>
        <member name="P:Soholife.Common.Images.Thumbnail.SmallWidth">
            <summary>
            图片缩略图宽度
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.Thumbnail.SmallHeight">
            <summary>
            图片缩略图高度
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.Thumbnail.SaveMod">
            <summary>
            缩略图的保存方式(HW):指定高宽缩放（可能变形),
            (W):指定宽，高按比例,
            (H):指定高，宽按比例,
            (Cut):指定高宽裁减（不变形）
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.Thumbnail.SmallPath">
            <summary>
            缩略图存储的站点相对路径(网站虚拟路径)
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.Thumbnail.SmallName">
            <summary>
            缩略图存储名称，当为""时，则使用随机名称
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.Thumbnail.ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.Upload(System.Web.UI.HtmlControls.HtmlInputFile)">
            <summary>
            具体执行上传的操作
            </summary>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.Upload(System.Web.HttpPostedFileBase)">
            <summary>
            开始上传文件
            </summary>
            <param name="oPostedFile"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.Upload(System.Web.HttpPostedFile)">
            <summary>
            开始上传文件
            </summary>
            <param name="oPostedFile"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.Upload(System.String,System.Int32,System.IO.Stream)">
            <summary>
            具体执行上传的操作
            </summary>
            <param name="sContentName"></param>
            <param name="iContentLength"></param>
            <param name="inputStream"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.Makeimage(System.String,System.String,System.String)">
            <summary>
            加图片水印
            </summary>
            <param name="sourceimagefilepath">原图片路径</param>
            <param name="watermarkimagefilepath">水印图片路径</param>
            <param name="saveimagefilepath">加水印后图片保存路径</param>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.GetRndNumber">
            <summary>
            使用随机数生成一个数字字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.IsFileAllowUpload(System.String)">
            <summary>
            判断是否文件容许上传
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.GetFileExt(System.String)">
            <summary>
            获得文件后缀名
            </summary>
            <param name="FullPath"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.UploadImage.CreateFolder(System.String)">
            <summary>
            创建文件目录
            </summary>
            <param name="FolderPath"></param>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.MaxWidth">
            <summary>
            保存图片的原始大图片宽度（如果不为0，则表示按照宽度进行等比例压缩，宽度优先级高于高度优先级）
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.MaxHeight">
            <summary>
            保存图片的原始大图片高度（如果不为0，则表示按照宽度进行等比例压缩，宽度优先级高于高度优先级）
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.NeedDirectory">
            <summary>
            是否需要针对存储进行日期划分
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.SmallImage">
            <summary>
            缩略图信息
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.MaxSize">
            <summary>
            上传图片最大值(单位为K)
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.SavePath">
            <summary>
            上传图片保存地址(虚拟路径)
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.SaveName">
            <summary>
            上传图片保存文件名
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.AllowType">
            <summary>
            上传图片容许类型
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.ImageWidth">
            <summary>
            得到图片的实际宽度（只读）
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.ImageHeight">
            <summary>
            得到图片的实际高度（只读）
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.ImageSize">
            <summary>
            图片大小，只读（单位为K）
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.ImageType">
            <summary>
            文件类型，只读
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.ImageName">
            <summary>
            图片原名，（只读）
            </summary>
        </member>
        <member name="P:Soholife.Common.Images.UploadImage.ErrorMsg">
            <summary>
            错误信息（只读）
            </summary>
        </member>
        <member name="T:Soholife.Common.Images.ImageValidate">
            <summary>
            TValidate 的摘要说明
            </summary>
        </member>
        <member name="M:Soholife.Common.Images.ImageValidate.CreateImage(System.Int32)">
            <summary>
            输出图片对象
            </summary>		
        </member>
        <member name="M:Soholife.Common.Images.ImageValidate.CreateImage(System.String)">
            <summary>
            输出图片对象
            </summary>
            <param name="checkCode"></param>
        </member>
        <member name="M:Soholife.Common.Images.ImageValidate.IsValidate(System.String)">
            <summary>
            验证是否字符串有效
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.ImageValidate.rndStr(System.Int32)">
            <summary>
            生成随机长度的图片验证字符串
            </summary>
            <param name="iLen"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.ImageValidate.SetSession(System.String)">
            <summary>
            设置验证码字符串
            </summary>
        </member>
        <member name="T:Soholife.Common.Images.WebGDI">
            <summary>
            WebGDI : 文字图片、水印图片。
            </summary>
        </member>
        <member name="M:Soholife.Common.Images.WebGDI.GetThumbnailImage(System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Drawing.Font)">
            <summary>
            生成缩微图，并加上阴影文字
            </summary>
            <param name="Width">生成缩微图的宽度</param>
            <param name="Height">生成缩微图的高度</param>
            <param name="SourceImg"></param>
            <param name="Text"></param>
            <param name="Left"></param>
            <param name="Top"></param>
            <param name="font">new Font("Fixedsys", 9, FontStyle.Regular)</param>
        </member>
        <member name="M:Soholife.Common.Images.WebGDI.GetWaterMarkTextImage(System.String,System.String,System.String,Soholife.Common.Images.wmPosition,System.String)">
            <summary>
            在一张图片的指定位置处加入水印文字
            </summary>
            <param name="SourceImage">指定源图片的绝对路径</param>
            <param name="Text">指定文本</param>
            <param name="fontFamily">文本字体</param>
            <param name="textPos">指定位置</param>
            <param name="SaveImage">保存图片的绝对路径</param>
        </member>
        <member name="M:Soholife.Common.Images.WebGDI.GetWaterMarkPicImage(System.String,System.String,Soholife.Common.Images.wmPosition,System.String)">
            <summary>
            在一张图片的指定位置处加入一张具有水印效果的图片
            </summary>
            <param name="SourceImage">指定源图片的绝对路径</param>
            <param name="WaterMarkImage">指定水印图片的绝对路径</param>
            <param name="wmPos">指定位置</param>
            <param name="SaveImage">保存图片的绝对路径</param>
        </member>
        <member name="M:Soholife.Common.Images.WebGDI.GetWarterMarkPicTextImage(System.String,System.String,System.String,System.String,Soholife.Common.Images.wmPosition,Soholife.Common.Images.wmPosition,System.String)">
            <summary>
            在一张图片的指定位置处加入一张具有水印效果的图片和一段文本
            </summary>
            <param name="SourceImage"></param>
            <param name="WaterMarkImage"></param>
            <param name="Text"></param>
            <param name="fontFamily"></param>
            <param name="wmPos"></param>
            <param name="textPos"></param>
            <param name="SaveImage"></param>
        </member>
        <member name="M:Soholife.Common.Images.WebGDI.MakeSpamImageGen(System.String,System.String)">
            <summary>
            生成验证码图片
            </summary>
            <param name="cookiesName"></param>
            <param name="str"></param>
        </member>
        <member name="M:Soholife.Common.Images.WebGDI.JustImage(System.String,System.Int32,System.Int32)">
            <summary>
            检测指定图片是否符合标准
            </summary>
            <param name="imgLoc"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Images.WebGDI.ImageMark(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="imgLoc"></param>
            <param name="wmLoc"></param>
        </member>
        <member name="M:Soholife.Common.Images.WebGDI.ImageMark(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="imgLoc"></param>
            <param name="wmLoc"></param>
            <param name="wmAlign"></param>
        </member>
        <member name="M:Soholife.Common.Images.WebGDI.GetEncoderInfo(System.String)">
            <summary>
            
            </summary>
            <param name="mimeType"></param>
            <returns></returns>
        </member>
        <member name="T:Soholife.Common.Images.wmPosition">
            <summary>
            水印效果在源图片中的位置
            </summary>
        </member>
        <member name="F:Soholife.Common.Images.wmPosition.MM">
            <summary>
            绝对居中
            </summary>
        </member>
        <member name="F:Soholife.Common.Images.wmPosition.LT">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:Soholife.Common.Images.wmPosition.LB">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:Soholife.Common.Images.wmPosition.CT">
            <summary>
            中上
            </summary>
        </member>
        <member name="F:Soholife.Common.Images.wmPosition.CB">
            <summary>
            中下
            </summary>
        </member>
        <member name="F:Soholife.Common.Images.wmPosition.RT">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:Soholife.Common.Images.wmPosition.RB">
            <summary>
            右下
            </summary>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.DeleteFile(System.String)">
            <summary>
            删除特定文件记录
            </summary>
            <param name="sFilePath"></param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.WriteFile(System.String,System.String)">
            <summary>
            将特定文本内容写入特定文件(覆盖写入)
            </summary>
            <param name="sFilePath">文件存储地址（物理路径）</param>
            <param name="sContent">文件内容</param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.WriteFile(System.String,System.String,System.String)">
            <summary>
            将特定文本内容写入特定文件(覆盖写入)
            </summary>
            <param name="sFilePath">文件存储地址（物理路径）</param>
            <param name="sFileName">文件名字</param>
            <param name="sContent">文件内容</param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.WriteFile(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            将特定文本内容写入特定文件(覆盖写入)
            </summary>
            <param name="sFilePath">文件存储地址（物理路径）</param>
            <param name="sFileName">文件名字</param>
            <param name="sContent">文件内容</param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.WriteFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            将特定文本内容写入特定文件(覆盖写入)
            </summary>
            <param name="sFilePath">文件存储地址（物理路径）</param>
            <param name="sFileName">文件名字</param>
            <param name="sContent">文件内容</param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.AppendFile(System.String,System.String,System.String,System.String)">
            <summary>
            追加文件内容
            </summary>
            <param name="sFilePath"></param>
            <param name="sFileName"></param>
            <param name="sContent"></param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.AppendFile(System.String,System.String,System.String)">
            <summary>
            追加文件内容
            </summary>
            <param name="sFilePath"></param>
            <param name="sFileName"></param>
            <param name="sContent"></param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.AppendFile(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            追加文件内容
            </summary>
            <param name="sFilePath"></param>
            <param name="sFileName"></param>
            <param name="sContent"></param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.GetFileContent(System.String)">
            <summary>
            得到特定文本文件内容信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.GetFileContent(System.String,System.Text.Encoding)">
            <summary>
            得到特定文本文件内容信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.FileDownload(System.String,System.Byte[])">
            <summary>
            输出文件流(提供下载)
            </summary>
            <param name="FullFileName"></param>
            <param name="strFileName"></param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.FileDownLoad(System.String)">
            <summary>
            通过远程地址，获取文件下载
            </summary>
            <param name="sUrl"></param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.FileDownLoad(System.String,System.String)">
            <summary>
            通过远程地址，获取文件下载
            </summary>
            <param name="sUrl"></param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.ExcelDownload(System.String,System.String,System.Text.Encoding)">
            <summary>
            Excel文档下载
            </summary>
            <param name="sFileName">文件名称</param>
            <param name="sTableHtml">Table标签</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:Soholife.Common.IO.FileUtils.ExportToExcel(System.String,System.String)">
            <summary>
            Excel导出
            </summary>
            <param name="FileName">文件名称</param>
            <param name="dt">数据</param>
        </member>
        <member name="T:Soholife.Common.IO.ErrorLog">
             <summary>
            ErrorLog 的摘要说明
             </summary>
        </member>
        <member name="M:Soholife.Common.IO.ErrorLog.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Soholife.Common.IO.ErrorLog.SetLog(System.String)">
            <summary>
            填写日志记录信息
            </summary>
        </member>
        <member name="M:Soholife.Common.IO.ErrorLog.SetLog(System.Exception)">
            <summary>
            填写日志记录信息
            </summary>
        </member>
        <member name="M:Soholife.Common.IO.ErrorLog.SetLog(System.String,System.Exception)">
            <summary>
            填写日志记录信息
            </summary>
        </member>
        <member name="M:Soholife.Common.IO.ErrorLog.SetLog(System.String,System.String)">
            <summary>
            填写日志记录信息
            </summary>
        </member>
        <member name="M:Soholife.Common.IO.ErrorLog.GetPath">
            <summary>
            获取路径
            </summary>
        </member>
        <member name="M:Soholife.Common.IPUtils.CheckIP(System.String,System.Int64@,System.Int64@)">
            <summary>
            判断特定信息是否是输入的IP内容
            </summary>
            <param name="sIP"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IPUtils.IpToInt(System.String)">
            <summary>
            IP地址转换成Int数据
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IPUtils.IntToIP(System.Int64)">
            <summary>
            int转换成IP 
            </summary>
            <param name="ip_Int"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IPUtils.GetIP">
            <summary>
            新增方法，原方法继续保留
            </summary>
            <returns></returns>
        </member>
        <member name="F:Soholife.Common.IPScaner.dataPath">
            <summary>
            qqwry.dat 文件路径
            </summary>
        </member>
        <member name="F:Soholife.Common.IPScaner.ip">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="F:Soholife.Common.IPScaner.country">
            <summary>
            IP所在地址
            </summary>
        </member>
        <member name="M:Soholife.Common.IPScaner.IpToInt(System.String)">
            <summary>
            IP地址转换成Int数据
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IPScaner.IntToIP(System.Int64)">
            <summary>
            int转换成IP 
            </summary>
            <param name="ip_Int"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IPScaner.IPLocation">
            <summary>
            获取IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IPScaner.IPLocation(System.String,System.String)">
            <summary>
            获取IP地址
            </summary>
            <param name="dataPath"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IPScaner.GetMyIP">
            <summary>
            客户端获取IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IPScaner.CpuID">
            <summary>
            获取CPUID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.IPScaner.GetMac">
            <summary>
            获取MAC地址
            </summary>
            <returns></returns>
        </member>
        <member name="T:Soholife.Common.Json.AjaxResult">
            <summary>
            AJAX结果集
            </summary>
        </member>
        <member name="F:Soholife.Common.Json.AjaxResult.NoLogin">
            <summary>
            是否需要登录
            </summary>
        </member>
        <member name="F:Soholife.Common.Json.AjaxResult.Result">
            <summary>
            返回结果信息
            </summary>
        </member>
        <member name="F:Soholife.Common.Json.AjaxResult.Msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="M:Soholife.Common.Json.AjaxResult.ReturnAjax">
            <summary>
            主要提供AJAX页面使用，返回对应的Json格式字符串(这个后续会替换了上面的方法)
            </summary>
            <param name="result">1：表示成功,0：表示失败</param>
            <param name="bNeedLogin">bNeedLogon:true ，表示需要登录，false,表示已登录了，不需要登录</param>
            <param name="sMessage">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.String2Json(System.String)">
            <summary>
            过滤特殊字符
            </summary>
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ParseFormJson``1(System.String)">
            <summary>
            把JSON字符串还原为对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="szJson">JSON字符串</param>
            <returns>对象实体</returns>
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ListToJson``1(System.Collections.Generic.IList{``0})">
            <summary>
            List转换成Json
            </summary>
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ListToJson``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            List转换成Json 
            </summary>
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ObjectToJSON(System.Object)">
            <summary> 
            对象转JSON 
            </summary> 
            <param name="obj">对象</param> 
            <returns>JSON格式的字符串</returns> 
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ToJson(System.Object)">
            <summary> 
            对象转换为Json 
            </summary> 
            <param name="jsonObject">对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ToJson(System.Collections.IEnumerable)">
            <summary> 
            对象集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ToArrayString(System.Collections.IEnumerable)">
            <summary> 
            普通集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ToJson(System.Data.DataSet)">
            <summary> 
            DataSet转换为Json 
            </summary> 
            <param name="dataSet">DataSet对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ToJson(System.Data.DataTable)">
            <summary> 
            Datatable转换为Json 
            </summary> 
            <param name="table">Datatable对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ToJson(System.Data.DataTable,System.String)">
            <summary>
            DataTable转换为Json 
            </summary>
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.ToJson(System.Data.Common.DbDataReader)">
            <summary> 
            DataReader转换为Json 
            </summary> 
            <param name="dataReader">DataReader对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.StringFormat(System.String,System.Type)">
            <summary>
            格式化字符型、日期型、布尔型
            </summary>
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.GetJsonValue(System.String,System.String)">
            <summary>
            得到特定JSON字符串中，对应KEY的值
            </summary>
            <param name="sJsonString"></param>
            <param name="sKey"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.GetString(System.String)">
            <summary>
            解析Utf8代码为汉字字符
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Json.ConvertToJson.GetList``1(System.String)">
            <summary>
            json转List
            </summary>
            <typeparam name="T"></typeparam>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:Soholife.Common.JsUtils.MessageBox_不要使用这个类了_今天来后_要记得修改程序">
            <summary>
            MessageBox: 显示消息提示对话框。
            无法继承此类。
            </summary>
        </member>
        <member name="M:Soholife.Common.JsUtils.MessageBox_不要使用这个类了_今天来后_要记得修改程序.Show(System.Web.UI.Page,System.String)">
            <summary>
            显示消息提示对话框
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:Soholife.Common.JsUtils.MessageBox_不要使用这个类了_今天来后_要记得修改程序.ShowConfirm(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            控件点击 消息确认提示框
            </summary>
            <param name="control">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:Soholife.Common.JsUtils.MessageBox_不要使用这个类了_今天来后_要记得修改程序.ShowAndRedirect(System.Web.UI.Page,System.String,System.String)">
            <summary>
            显示消息提示对话框，并进行页面跳转
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
            <param name="url">跳转的目标URL</param>
        </member>
        <member name="M:Soholife.Common.JsUtils.MessageBox_不要使用这个类了_今天来后_要记得修改程序.ResponseScript(System.Web.UI.Page,System.String)">
            <summary>
            输出自定义脚本信息
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="script">输出脚本</param>
        </member>
        <member name="M:Soholife.Common.JsUtils.MessageBox_不要使用这个类了_今天来后_要记得修改程序.ResponseScript(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
             输出自定义脚本信息
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="script">输出脚本</param>
            <param name="addScriptTags">是否添加脚本头部和尾部标签</param>
        </member>
        <member name="M:Soholife.Common.JsUtils.MessageBox_不要使用这个类了_今天来后_要记得修改程序.GetFocus(System.String,System.Web.UI.Page)">
            <summary>
            把光标焦点定位到当前页面的页面对象上
            </summary>
            <param name="Ctl_Name"></param>
            <param name="page"></param>
        </member>
        <member name="M:Soholife.Common.JsUtils.MessageBox_不要使用这个类了_今天来后_要记得修改程序.Loading(System.Web.UI.Page)">
            <summary>
            加载页面
            </summary>
            <param name="page"></param>
        </member>
        <member name="T:Soholife.Common.KeyWordsFilter">
            <summary>
            关键字过滤类
            </summary>
        </member>
        <member name="M:Soholife.Common.KeyWordsFilter.#ctor(System.String[])">
            <summary>
            声明关键字过滤类
            </summary>
            <param name="keywords">关键字数组</param>
        </member>
        <member name="M:Soholife.Common.KeyWordsFilter.Init(System.String[])">
            <summary>
            初始化过滤类
            </summary>
            <param name="keywords">关键字数组</param>
        </member>
        <member name="M:Soholife.Common.KeyWordsFilter.Filter(System.String)">
            <summary>
            过滤出文本中的关键字
            </summary>
            <param name="text">需要过滤的文本</param>
            <returns>第一个匹配的关键字,为空则无匹配</returns>
        </member>
        <member name="M:Soholife.Common.PinYin.SpellCode.GetSpellCode(System.String)">
            <summary> 
            在指定的字符串列表CnStr中检索符合拼音索引字符串 
            </summary> 
            <param name="CnStr">汉字字符串</param> 
            <returns>相对应的汉语拼音首字母串</returns>
        </member>
        <member name="M:Soholife.Common.PinYin.SpellCode.GetSpellFirstCode(System.String)">
            <summary> 
            在指定的字符串列表CnStr中第一个字符拼音索引 
            </summary> 
            <param name="CnStr">汉字字符串</param> 
            <returns>相对应的汉语拼音首字母串</returns> 
        </member>
        <member name="M:Soholife.Common.PinYin.SpellCode.GetNumFistCode(System.String)">
            <summary> 
            在指定的字符串列表CnStr中第一个字符拼音索引 【包括数字】
            </summary> 
            <param name="CnStr">汉字字符串</param> 
            <returns>相对应的汉语拼音首字母串</returns> 
        </member>
        <member name="M:Soholife.Common.PinYin.SpellCode.GetCharSpellCode(System.String)">
            <summary> 
            得到一个汉字的拼音第一个字母，如果是一个英文字母则直接返回大写字母 
            </summary> 
            <param name="CnChar">单个汉字</param> 
            <returns>单个大写字母</returns>
        </member>
        <member name="M:Soholife.Common.RAR.WinrarUtils.Compress(System.String,System.String)">
            <summary>
            执行压缩过程
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RAR.WinrarUtils.Compress(System.String,System.String,System.String)">
            <summary>
            执行压缩过程
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RAR.ZipUtils.ZipFile(System.String,System.String,System.String,System.String)">
            <summary>
            压缩字符串
            </summary>
            <param name="strText">需压缩的文本内容信息</param>
            <param name="sSourceFile">原始文件名（只包含文件名）</param>
            <param name="sTargetFile">压缩后文件名（包含压缩后的文件路径 + 文件名）</param>
            <param name="password">加密密码</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RAR.ZipUtils.ZipFile(System.String,System.String)">
            <summary>
            压缩文件
            </summary>		
            <param name="sSourceFile">原始文件名（只包含文件名）</param>
            <param name="sTargetFile">压缩后文件名（包含压缩后的文件路径 + 文件名）</param>		
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RAR.ZipUtils.ZipFile(System.String,System.String,System.String)">
            <summary>
            压缩文件
            </summary>		
            <param name="sSourceFile">原始文件名（只包含文件名）</param>
            <param name="sTargetFile">压缩后文件名（包含压缩后的文件路径 + 文件名）</param>
            <param name="password">加密密码</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RAR.ZipUtils.UnzipFile(System.String,System.String)">
            <summary>
            解压文件
            </summary>
            <param name="zipFilePath">需要的解压文件路径</param>
            <param name="filePath">解出文件路径</param>
            <param name="errorText">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RAR.ZipUtils.UnzipFile(System.String,System.String,System.String)">
            <summary>
            解压文件
            </summary>
            <param name="zipFilePath">需要解压的文件路径，包含完整文件名</param>
            <param name="filePath">解出的文件路径，这里传递的是保存解压后的路径</param>
            <param name="password">解密密码</param>
            <param name="errorText">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RAR.ZipUtils.UnzipFile(System.IO.Stream,System.String)">
            <summary>
            解压文件
            </summary>
            <param name="stream">需要的解压的压缩文件流内容</param>
            <param name="filePath">解出文件路径</param>
            <param name="errorText">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RAR.ZipUtils.UnzipFile(System.Byte[],System.String)">
            <summary>
            解压文件
            </summary>
            <param name="b">需要的解压的压缩文件字节流</param>
            <param name="filePath">解出文件路径</param>
            <param name="errorText">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RAR.ZipUtils.UnzipFile(System.IO.Stream,System.String,System.String)">
            <summary>
            解压文件
            </summary>
            <param name="stream">需要的解压的压缩文件流内容</param>
            <param name="filePath">解出的文件路径，这里传递的是保存解压后的路径</param>
            <param name="password">解密密码</param>
            <param name="errorText">错误信息</param>
            <returns></returns>
        </member>
        <member name="F:Soholife.Common.RedisUtil._host">
            <summary>
            Redis服务器地址
            </summary>
        </member>
        <member name="F:Soholife.Common.RedisUtil._port">
            <summary>
            端口
            </summary>
        </member>
        <member name="F:Soholife.Common.RedisUtil._password">
            <summary>
            密码
            </summary>
        </member>
        <member name="F:Soholife.Common.RedisUtil._timeout">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="M:Soholife.Common.RedisUtil.ReaderEnqueueList``1(System.String)">
            <summary>
            从Redis中读取日志记录列表
            </summary>
            <typeparam name="T">数据结构类型</typeparam>
            <param name="sKey">关键字</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RedisUtil.AddEnqueue``1(``0,System.String)">
            <summary>
            加入具有数据结构的消息队列中
            </summary>
            <typeparam name="T">数据结构类型</typeparam>
            <param name="t">数据对象</param>
            <param name="sKey">关键字</param>
        </member>
        <member name="M:Soholife.Common.RedisUtil.Set``1(System.String,``0)">
            <summary>
            设置缓存
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key"></param>
            <param name="t"></param>
            <param name="timeOut">过期时间</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RedisUtil.Set``1(System.String,``0,System.DateTime)">
            <summary>
            设置缓存
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key"></param>
            <param name="t"></param>
            <param name="timeOut">过期时间</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RedisUtil.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RedisUtil.IsExist(System.String)">
            <summary>
            判断是否存在某个key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RedisUtil.GetValueLength(System.String)">
            <summary>
            获取Value的byte的长度
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RedisUtil.Remove(System.String)">
            <summary>
            移除指定的Key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RedisUtil.Append(System.String,System.String)">
            <summary>
            累加(专用的哦)
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="P:Soholife.Common.RedisUtil.Host">
            <summary>
            Redis服务器地址
            </summary>
        </member>
        <member name="P:Soholife.Common.RedisUtil.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:Soholife.Common.RedisUtil.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Soholife.Common.RedisUtil.Timeout">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:Soholife.Common.RedisUtil.ChangeDb">
            <summary>
            变动的DB
            </summary>
        </member>
        <member name="P:Soholife.Common.RedisUtil.Redis">
            <summary>
            获得Redis对象
            </summary>
        </member>
        <member name="M:Soholife.Common.Rijndael.EncryptData(System.Byte[],System.Byte[],System.Byte[],Soholife.Common.Rijndael.BlockSize,Soholife.Common.Rijndael.KeySize,Soholife.Common.Rijndael.EncryptionMode)">
            <summary>This version of EncryptData takes the message, password 
            and IV as byte arrays and encrypts the message, returning the encrypted text 
            as a byte array.
            
            NOTE: In this implementation I add four bytes to the start of the message and
            use that space to store the length of the message. Then the sister DecryptData
            function knows where to trim the message before returning it. Not all
            encryption routines will use this method. The only parts specified in the
            Rijndael standard are for use of the gentables, gkey, encrypt and decrypt
            functions. So if you have some data encrypted with another implementation
            of Rijndael, or you are encypting data that will be decrypted with another
            implementation, then you will need to know how they are recording the length of
            the message (if at all), and if you are encrypting/decrypting strings whether
            they based it on Ascii or Unicode (or some other character set).
            </summary>
            <param name="message">The encrypted message</param>
            <param name="password">The password/key to encrypt the message with</param>
            <param name="initialisationVector">The IV as a string</param>
            <param name="blockSize">The block size used to encrypt the message</param>
            <param name="keySize">The key size used to encrypt the message</param>
            <param name="cryptMode">The encryption mode, CBC or ECB, used to encrypt the message</param>
        </member>
        <member name="M:Soholife.Common.Rijndael.EncryptData(System.String,System.String,System.String,Soholife.Common.Rijndael.BlockSize,Soholife.Common.Rijndael.KeySize,Soholife.Common.Rijndael.EncryptionMode,System.Boolean)">
            <summary>This version of EncryptData takes the message, password 
            and IV as strings and encrypts the message, returning the encrypted text as a string.
            </summary>
            <param name="message">The plain text message</param>
            <param name="password">The password/key to encrypt the message with</param>
            <param name="initialisationVector">The IV as a string</param>
            <param name="blockSize">The block size used to encrypt the message</param>
            <param name="keySize">The key size used to encrypt the message</param>
            <param name="cryptMode">The encryption mode, CBC or ECB, used to encrypt the message</param>
            <param name="returnAsHex">Whether the encrypted message is to be returned as Hex</param>
        </member>
        <member name="M:Soholife.Common.Rijndael.DecryptData(System.Byte[],System.Byte[],System.Byte[],Soholife.Common.Rijndael.BlockSize,Soholife.Common.Rijndael.KeySize,Soholife.Common.Rijndael.EncryptionMode)">
            <summary>This version of DecryptData takes the encrypted message, password 
            and IV as byte arrays and decrypts the message, returning the plain text as 
            a byte array.
            </summary>
            <param name="message">The encrypted message</param>
            <param name="password">The password/key that was used to encrypt the message</param>
            <param name="initialisationVector">The IV</param>
            <param name="blockSize">The block size used in encrypting the message</param>
            <param name="keySize">The key size used in encrypting the message</param>
            <param name="cryptMode">The encryption mode, CBC or ECB, used in encrypting the message</param>
        </member>
        <member name="M:Soholife.Common.Rijndael.DecryptData(System.String,System.String,System.String,Soholife.Common.Rijndael.BlockSize,Soholife.Common.Rijndael.KeySize,Soholife.Common.Rijndael.EncryptionMode,System.Boolean)">
            <summary>This version of DecryptData takes the encrypted message, password 
            and IV as strings and decrypts the message, returning the plain text as a string.
            </summary>
            <param name="message">The encrypted message</param>
            <param name="password">The password/key that was used to encrypt the message</param>
            <param name="initialisationVector">The IV as a string</param>
            <param name="blockSize">The block size used in encrypting the message</param>
            <param name="keySize">The key size used in encrypting the message</param>
            <param name="cryptMode">The encryption mode, CBC or ECB, used in encrypting the message</param>
            <param name="messageAsHex">Whether the encrypted message was returned as Hex</param>
        </member>
        <member name="M:Soholife.Common.Rijndael.BytesToString(System.Byte[])">
            <summary>Utility function to convert a byte array to a string</summary>
        </member>
        <member name="M:Soholife.Common.Rijndael.StringToBytes(System.String)">
            <summary>Utility function to convert a string to a byte array</summary>
        </member>
        <member name="M:Soholife.Common.Rijndael.BytesToHex(System.Byte[])">
            <summary>Utility function to convert a byte array to a string of hex</summary>
        </member>
        <member name="M:Soholife.Common.Rijndael.HexToBytes(System.String)">
            <summary>Utility function to convert a string of hex to a byte array</summary>
        </member>
        <member name="M:Soholife.Common.RndUtils.GetRndNumber(System.Int32)">
            <summary>
            得到特定范围内的一个随机数字
            </summary>
            <param name="iMax"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RndUtils.GetRndNumber(System.Int32,System.Int32)">
            <summary>
            得到特定范围内的一个随机数字
            </summary>
            <param name="iMax"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RndUtils.GetRndString">
            <summary>
            使用随机数生成一个数字字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RndUtils.GetRndString(System.String)">
            <summary>
            使用随机数生成一个数字字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RndUtils.GetRndString(System.String,System.Int32)">
            <summary>
            使用随机数生成一个数字字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RndUtils.GetRndObject``1(System.Collections.Generic.List{``0})">
            <summary>
            从List对象中，随机获取一个
            </summary>
            <param name="oList"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RndUtils.CheckIsSelect(System.Int32)">
            <summary>
            得到是否特定比率是否被选中
            </summary>
            <param name="iTotalNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RndUtils.CheckIsSelect(System.Int32,System.Int32)">
            <summary>
            得到特定比率的命中率(这个一般用于百分比计算)
            </summary>
            <param name="iTotalNumber"></param>
            <returns></returns>
        </member>
        <member name="T:Soholife.Common.RSAHelper">
            <summary>
            非对称RSA加密类 可以参考
            若是私匙加密 则需公钥解密
            反正公钥加密 私匙来解密
            需要BigInteger类来辅助
            </summary>
        </member>
        <member name="M:Soholife.Common.RSAHelper.#ctor(System.String,System.String)">
            <summary>
            获取证书信息
            </summary>
            <param name="path">路径</param>
            <param name="pwd">密码</param>
        </member>
        <member name="M:Soholife.Common.RSAHelper.priKey">
            <summary>
            获取私钥参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RSAHelper.pubKey">
            <summary>
            获取公钥参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RSAHelper.RSAEncryptByEncode(System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>         
            RSA 私钥加密         
            </summary>         
            <param name="data">数据</param>         
            <param name="key">私钥</param>         
            <returns></returns>         
        </member>
        <member name="M:Soholife.Common.RSAHelper.RSAEncryptByDecode(System.Byte[],Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>         
            RSA 解密         
            </summary>         
            <param name="data">数据</param>         
            <param name="key">私钥</param>         
            <returns></returns>         
        </member>
        <member name="M:Soholife.Common.RSAHelper.Des3DecodeECB(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            DES3 ECB模式解密
            </summary>
            <param name="key">密钥</param>
            <param name="iv">IV(当模式为ECB时，IV无用)</param>
            <param name="str">密文的byte数组</param>
            <returns>明文的byte数组</returns>
        </member>
        <member name="M:Soholife.Common.RSAHelper.Des3EncodeECB(System.Byte[],System.Byte[],System.Byte[])">
            <summary>         
            DES3 ECB模式加密         
            </summary>         
            <param name="key">密钥</param>         
            <param name="iv">IV(当模式为ECB时，IV无用)</param>         
            <param name="str">明文的byte数组</param>         
            <returns>密文的byte数组</returns>         
        </member>
        <member name="F:Soholife.Common.SecurityUtils._sStrKey">
            <summary>
            唯一密匙
            </summary>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.Encrypt3DES(System.String)">
            <summary>
            3des加密字符串
            </summary>
            <param name="sSource">要加密的字符串</param>
            <remarks>静态方法，采用默认ascii编码</remarks>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.Encrypt3DES(System.String,System.String)">
            /// <summary>
            3des加密字符串
            </summary>
            <param name="sSource">要加密的字符串</param>
            <param name="sKey">密钥</param>
            <returns>加密后并经base64编码的字符串</returns>
            <remarks>静态方法，采用默认ascii编码</remarks>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.Encrypt3DES(System.String,System.String,System.Text.Encoding)">
            <summary>
            3des加密字符串
            </summary>
            <param name="sSource">要加密的字符串</param>
            <param name="sKey">密钥</param>
            <param name="eEncoding">编码方式</param>
            <returns>加密后并经base64编码的字符串</returns>
            <remarks>重载，指定编码方式</remarks>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.Decrypt3DES(System.String)">
            <summary>
            3des解密字符串（直接使用当前默认的加密钥匙）
            </summary>
            <param name="sSource">要解密的字符串</param>
            <remarks>静态方法，采用默认ascii编码</remarks>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.Decrypt3DES(System.String,System.String)">
            <summary>
            3des解密字符串
            </summary>
            <param name="sSource">要解密的字符串</param>
            <param name="sKey">密钥</param>
            <returns>解密后的字符串</returns>
            <exception cref="!:">密钥错误</exception>
            <remarks>静态方法，采用默认ascii编码</remarks>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.Decrypt3DES(System.String,System.String,System.Text.Encoding)">
            <summary>
            3des解密字符串
            </summary>
            <param name="sSource">要解密的字符串</param>
            <param name="sKey">密钥</param>
            <param name="eEncoding">编码方式</param>
            <returns>解密后的字符串</returns>
            <exception cref="!:">密钥错误</exception>
            <remarks>静态方法，指定编码方式</remarks>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.AesEncrypt(System.String,System.String)">
            <summary>
             AES 加密
            </summary>
            <param name="str"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.AesDecrypt(System.String,System.String)">
            <summary>
             AES 解密
            </summary>
            <param name="str"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.EncryptMD5(System.String)">
            <summary>
            使用MD5方式加密
            </summary>
            <param name="sSource"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.EncryptMD5_16(System.String)">
            <summary>
            16位MD5加密方式
            </summary>
            <param name="ConvertString"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SecurityUtils.EncryptMD5(System.String,System.Text.Encoding)">
            <summary>
            MD5加密
            </summary>
            <param name="str"></param>
            <param name="eEncoding"></param>
            <returns></returns>
        </member>
        <member name="T:Soholife.Common.Security.EDS">
            <summary>
            EDS 的摘要说明
            </summary>
        </member>
        <member name="M:Soholife.Common.Security.EDS.EncryptDes(System.String)">
            <summary>
            3.加密方法:
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Security.EDS.DecryptDes(System.String)">
            <summary>
            4.机密方法:
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Security.EDS.Encrypt(System.String,System.String,System.String)">
            <summary>
            加密
            </summary>
            <param name="PlainText"></param>
            <param name="KEY_64"></param>
            <param name="IV_64"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Security.EDS.Decrypt(System.String,System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="CypherText"></param>
            <param name="KEY_64"></param>
            <param name="IV_64"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SerialUtils.StringToBytes(System.String)">
            <summary>
            字符串转换为byte[]
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SerialUtils.BytesToString(System.Byte[])">
            <summary>
            byte[]转换为string
            </summary>
            <param name="byteDate"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SerialUtils.ObjectToString(System.Object)">
            <summary>
            序列化相关信息，并返回对应的字符串
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SerialUtils.StringToObject(System.String)">
            <summary>
            从特定字符串，反序列化为特定对象
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SerialUtils.ObjectToBytes(System.Object)">
            <summary>
            将一个object对象序列化，返回一个byte[]
            </summary>
            <param name="obj">能序列化的对象</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SerialUtils.BytesToObject(System.Byte[])">
            <summary>
            将一个序列化后的byte[]数组还原
            </summary>
            <param name="Bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.SerialUtils.SaveFile(System.Object,System.String)">
            <summary>
            将对象序列化后，存储到文件中
            </summary>
        </member>
        <member name="M:Soholife.Common.SerialUtils.GetMessageArrayFromFile(System.String)">
            <summary>
            从特定文件中反序列化某字符串，并返回对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Sign.BeginSign(System.Collections.Generic.SortedDictionary{System.String,System.String},System.String)">
            <summary>
            开始签名
            </summary>
            <param name="inputPara">待签名参数</param>
            <param name="sKey">秘钥</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Sign.BeginSign(System.Collections.Generic.SortedDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            开始签名
            </summary>
            <param name="inputPara">待签名参数</param>
            <param name="sKey">秘钥</param>
            <param name="sSingName">加密串存放字段名</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Sign.Verifies(System.Collections.Generic.SortedDictionary{System.String,System.String},System.String)">
            <summary>
            验证签名是否一致
            </summary>
            <param name="inputPara"></param>
            <param name="sAppKey"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Sign.GetPreSignStr(System.Collections.Generic.SortedDictionary{System.String,System.String})">
            <summary>
            获取待签名字符串（调试用）
            </summary>
            <param name="inputPara">通知返回参数数组</param>
            <returns>待签名字符串</returns>
        </member>
        <member name="M:Soholife.Common.Sign.FilterPara(System.Collections.Generic.SortedDictionary{System.String,System.String})">
            <summary>
            除去数组中的空值和签名参数并以字母a到z的顺序排序
            </summary>
            <param name="dicArrayPre">过滤前的参数组</param>
            <returns>过滤后的参数组</returns>
        </member>
        <member name="M:Soholife.Common.Sign.CreateLinkString(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            把数组所有元素，按照"参数=参数值"的模式用"&amp;"字符拼接成字符串
            </summary>
            <param name="dicArray">需要拼接的数组</param>
            <returns>拼接完成以后的字符串</returns>
        </member>
        <!-- 对于成员“M:Soholife.Common.Sign.CreateLinkStringUrlencode(System.Collections.Generic.IDictionary{System.String,System.String},System.Text.Encoding)”忽略有格式错误的 XML 注释 -->
        <member name="T:Soholife.Common.Smtp.ISmtpMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:Soholife.Common.Smtp.ISmtpMail.AddRecipient(System.String[])">
            <summary>
            添加多个邮件接收人。
            </summary>
            <param name="username">多个接收人的名字 <see cref="T:System.String"/> 数组。</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Smtp.ISmtpMail.Send">
            <summary>
            发送。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.From">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.FromName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.Html">
            <summary>
            是否支持 Html 格式。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.MailDomain">
            <summary>
            Mail 服务器。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.MailDomainPort">
            <summary>
            Mail 服务端口。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.MailServerUserName">
            <summary>
            Mail 服务器登陆用户名。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.MailServerPassWord">
            <summary>
            Mail 服务器登陆密码。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.RecipientName">
            <summary>
            签名。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.Subject">
            <summary>
            邮件主题。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.ISmtpMail.Body">
            <summary>
            邮件主体。
            </summary>
        </member>
        <member name="T:Soholife.Common.Smtp.SendMailMessage">
            <summary>
            在 Web 应用程序中定义用于管理发送电子邮件的方法。
            </summary>
        </member>
        <member name="M:Soholife.Common.Smtp.SendMailMessage.#ctor">
            <summary>
            初始化 <see cref="T:Soholife.Common.Smtp.SendMailMessage"/> 类的新实例。
            </summary>
        </member>
        <member name="M:Soholife.Common.Smtp.SendMailMessage.#ctor(System.String,System.String,System.String)">
            <summary>
            初始化 <see cref="T:Soholife.Common.Smtp.SendMailMessage"/> 类的新实例。
            </summary>
            <param name="SendServer">送邮件的服务器 IP 地址。</param>
            <param name="SendUserName">登陆邮件服务器的用户名。</param>
            <param name="SendPassword">登陆邮件服务器的密码。</param>
        </member>
        <member name="M:Soholife.Common.Smtp.SendMailMessage.Send">
            <summary>
            将指定的邮件发送到 SMTP 服务器以便传递。 
            </summary>
        </member>
        <member name="M:Soholife.Common.Smtp.SendMailMessage.Send(System.String,System.String,System.String,System.String)">
            <summary>
            将指定的邮件发送到 SMTP 服务器以便传递。
            </summary>
            <param name="from">发件人的电子邮件地址。</param>
            <param name="recipients">邮件收件人的地址。</param>
            <param name="subject">电子邮件的主题行。</param>
            <param name="body">电子邮件的正文。</param>
        </member>
        <member name="P:Soholife.Common.Smtp.SendMailMessage.Password">
            <summary>
            获取或设置登陆邮件服务器的密码。 
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SendMailMessage.SmtpServer">
            <summary>
            获取或设置发送邮件的服务器地址。 
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SendMailMessage.UserName">
            <summary>
            获取或设置登陆邮件服务器的用户名。 
            </summary>
        </member>
        <member name="T:Soholife.Common.Smtp.SmtpEmailAttribute">
            <summary>
            邮件属性。
            </summary>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpEmailAttribute.#ctor(System.String)">
            <summary>
            初始化 <see cref="T:Soholife.Common.Smtp.SmtpEmailAttribute"/> 邮件属性。
            </summary>
            <param name="Name">插件名称。</param>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpEmailAttribute.Author">
            <summary>
            作者。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpEmailAttribute.DllFileName">
            <summary>
            程序集文件名。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpEmailAttribute.PlugInName">
            <summary>
            插件名称。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpEmailAttribute.Version">
            <summary>
            插件版本。
            </summary>
        </member>
        <member name="T:Soholife.Common.Smtp.SmtpMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.#ctor">
            <summary>
            初始化  <see cref="T:Soholife.Common.Smtp.SmtpMail"/> 实例对象。
            </summary>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.AddAttachment(System.String[])">
            <summary>
            添加附件。
            </summary>
            <param name="FilePath">附件路径。</param>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.AddRecipient(System.String[])">
            <summary>
            
            </summary>
            <param name="Recipients"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.Base64Decode(System.String)">
            <summary>
            Base64 位字符解码。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.Base64Encode(System.String)">
            <summary>
            Base64 位字符编码。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.ErrCodeHTMessage(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.Send">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.Send(System.String)">
            <summary>
            
            </summary>
            <param name="smtpserver"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.Send(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="smtpserver">邮件服务器</param>
            <param name="from">发送人邮箱</param>
            <param name="fromname">发送名</param>
            <param name="to">收件人邮箱</param>
            <param name="toname">收件人名</param>
            <param name="html">是否HTML</param>
            <param name="subject">邮件标题</param>
            <param name="body">邮件正文</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Smtp.SmtpMail.SMTPCodeAdd">
            <summary>
            SMTP 错误码。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.From">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.FromName">
            <summary>
            发信人。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.Html">
            <summary>
            是否支持 Html 内容。
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.MailDomain">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.MailDomainPort">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.MailServerUserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.MailServerPassWord">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.RecipientName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.Subject">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.Body">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.Charset">
            <summary>
            字符集
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SmtpMail.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="T:Soholife.Common.Smtp.SysMailMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Soholife.Common.Smtp.SysMailMessage.AddRecipient(System.String[])">
            <summary>
            
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.Smtp.SysMailMessage.Send">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.Body">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.From">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.FromName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.Html">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.MailDomain">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.MailDomainPort">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.MailServerPassWord">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.MailServerUserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.RecipientName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Soholife.Common.Smtp.SysMailMessage.Subject">
            <summary>
            
            </summary>
        </member>
        <member name="M:Soholife.Common.StringUtils.GetPinYin(System.Char)">
            <summary>
            得到特定字符的拼音
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.IsChineseString(System.String)">
            <summary>
            检测一个字符串是否全部为中文
            </summary>
            <param name="sStr"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.IsChineseChar(System.Char)">
            <summary>
            是否当前字符是否是中文
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.GetChineseSpell(System.String)">
            <summary>
            得到汉字的首字母
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.GetShortCharString(System.String,System.Int32,System.String)">
            <summary>
            截取特定字符串的前N个字节
            </summary>
            <param name="iNum">取得前n位字符</param>
            <param name="sEndStr">结尾附加的字符</param>
            <param name="sString">标题</param>
        </member>
        <member name="M:Soholife.Common.StringUtils.GetShortString(System.String,System.Int32,System.String)">
            <summary>
            截取特定字符串的前N个字符
            </summary>
            <param name="sString"></param>
            <param name="iLen"></param>
            <param name="sEndStr"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.GetShortString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            截取特定字符串的前N个字符
            </summary>
            <param name="sString"></param>
            <param name="iStar"></param>
            <param name="iLastLen"></param>
            <param name="sEndStr"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.GetShortString(System.String,System.Int32)">
            <summary>
            截取iStar个字符之后的字符
            </summary>
            <param name="sString"></param>
            <param name="iStar"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.CheckStr(System.String)">
            <summary>
            检查一个字符串是否包括非法字符，允许字符如下，数字，字母，中文字符，下划线，减号
            </summary>
            <param name="sStr">源字符串</param>
        </member>
        <member name="M:Soholife.Common.StringUtils.CheckStr(System.String,System.Boolean)">
            <summary>
            检查一个字符串是否包括非法字符，允许字符如下，数字，字母，中文字符，下划线，减号
            </summary>
            <param name="bIncludeChinese">是否容许包括中文，如果是true,则表示容许，否则中文字符同样非法</param>
            <param name="sStr">源字符串</param>
        </member>
        <member name="M:Soholife.Common.StringUtils.GetStringLen(System.String)">
            <summary>
            得到特定字符串的长度（一个中文字符算两个长度）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.TrueNameHide(System.String)">
            <summary>
            隐藏玩家真实姓名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.TrueNameHide(System.String,System.Int32)">
            <summary>
            隐藏玩家真实姓名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.StringHide(System.String)">
            <summary>
            隐藏玩家真实姓名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.StringHide(System.String,System.Int32)">
            <summary>
            隐藏字符串中间N位（最后一位显示）
            </summary>
            <param name="sStr">字符串</param>
            <param name="iLen">显示长度</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.EmailHide(System.String)">
            <summary>
            隐藏邮箱用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.EmailHide(System.String,System.Int32,System.Int32)">
            <summary>
            隐藏邮箱用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.IsEmailEquals(System.String,System.String)">
            <summary>
            判断两个邮箱地址是否相同
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.GetShortDate(System.Object)">
            <summary>
            如果是昨天的的日期，得到 ‘昨天 HH:mm:ss’ 格式字符串
            </summary>
            <param name="oDate"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.GetDate(System.Object)">
            <summary>
            年份相同返回 'MM:DD HH:mm:ss' 字符串
            </summary>
            <param name="oDate"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.IsDouble(System.Object)">
            <summary>
            是否为double字符串
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.CheckOneStr(System.String,System.Boolean)">
            <summary>
            检查一个字符串是否包括非法字符，允许字符如下，数字，字母，中文字符，下划线，减号,英式标点
            </summary>
            <param name="bIncludeChinese">是否容许中文</param>
            <param name="sStr"></param>
        </member>
        <member name="M:Soholife.Common.StringUtils.getSpell(System.String)">
            <summary>
            私有函数，配合GetChineseSpell（）得到汉字的首字母
            </summary>
            <param name="cnChar"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.UrlEncode(System.String)">
            <summary>
            UrlEncode
            </summary>
            <param name="sStr"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.UrlDecode(System.String)">
            <summary>
            UrlDecode
            </summary>
            <param name="sStr"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.Latin1ToChinese(System.String)">
            <summary>
            将mysql的Latin文转换成系统默认字符，一般为中文
            主要是解决中文乱码问题
            </summary>
            <param name="sText"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.ChineseToLatin1(System.String)">
            <summary>
            将传递进去的中文转换为latin文，解决传入数据库后变成乱码问题
            </summary>
            <param name="sText"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.EncodeToChinese(System.String,System.String)">
            <summary>
            蒋特定编码格式的内容，转为中文
            </summary>
            <param name="sText"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.ChineseToEncode(System.String,System.String)">
            <summary>
            将传递进去的中文，转为特定名称的编码格式，解决传入数据库后变成乱码问题
            </summary>
            <param name="sText"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.StringUtils.RndStr(System.Int32)">
            <summary>
            生成随机长度的图片验证字符串
            </summary>
            <param name="iLen"></param>
            <returns></returns>
        </member>
        <member name="T:Soholife.Common.ValidatePic">
             <summary>
            TValidatePic 的摘要说明
             </summary>
        </member>
        <member name="F:Soholife.Common.ValidatePic._encryptkey">
            <summary>
            加密的校验码
            </summary>
        </member>
        <member name="F:Soholife.Common.ValidatePic.VALIDATE_SESSION_NAME">
            <summary>
            当使用SESSION存储验证码的时候，SESSION的名称
            </summary>
        </member>
        <member name="F:Soholife.Common.ValidatePic.rInt">
            <summary>
            随机数的种子
            </summary>
        </member>
        <member name="M:Soholife.Common.ValidatePic.IsValidate(System.String)">
            <summary>
            验证是否字符串有效(默认仅仅判断是否验证码正确，而不清除验证码，同时使用COOKIE存储)
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidatePic.IsValidate(System.String,System.Boolean)">
            <summary>
            验证是否字符串有效
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidatePic.IsValidate(System.String,System.String,System.Boolean)">
            <summary>
            验证是否字符串有效
            </summary>
            <param name="strName">自定义名称</param>
            <param name="s"></param>
            <param name="bClear"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidatePic.IsValidate(System.String,System.Boolean,System.Boolean)">
            <summary>
            验证是否字符串有效
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidatePic.IsValidate(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            验证是否字符串有效
            </summary>
            <param name="strName">自定义名字</param>
            <param name="s">验证码</param>
            <param name="bClear"></param>
            <param name="bIsUseCookies"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidatePic.CreateImage(System.String)">
            <summary>
            输出图片对象
            </summary>
            <param name="checkCode"></param>
        </member>
        <member name="M:Soholife.Common.ValidatePic.CreateImage(System.Int32)">
            <summary>
            输出图片对象
            </summary>		
        </member>
        <member name="M:Soholife.Common.ValidatePic.CreateImage(System.String,System.Int32)">
            <summary>
            输出图片对象	
            </summary>
            <param name="strCookieName">自定义名称</param>
            <param name="iLen"></param>
        </member>
        <member name="M:Soholife.Common.ValidatePic.CreateImage(System.Int32,System.String)">
            <summary>
            输出图片对象
            </summary>		
        </member>
        <member name="M:Soholife.Common.ValidatePic.CreateImage(System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            输出图片对象
            </summary>		
        </member>
        <member name="M:Soholife.Common.ValidatePic.CreateImage(System.Int32,System.Boolean,System.String)">
            <summary>
            输出图片对象
            </summary>		
        </member>
        <member name="M:Soholife.Common.ValidatePic.CreateImage(System.String,System.Boolean)">
            <summary>
            输出图片对象
            </summary>
            <param name="checkCode"></param>
        </member>
        <member name="M:Soholife.Common.ValidatePic.CreateImage(System.String,System.String,System.Boolean)">
            <summary>
            输出图片对象
            </summary>
            <param name="checkCode"></param>
        </member>
        <member name="M:Soholife.Common.ValidatePic.SetCookies(System.String)">
            <summary>
            设置验证码字符串到Cookies中
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Soholife.Common.ValidatePic.SetSession(System.String)">
            <summary>
            设置验证码字符串
            </summary>
        </member>
        <member name="M:Soholife.Common.ValidatePic.SetCookies(System.String,System.String)">
            <summary>
            设置验证码字符串到Cookies中
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Soholife.Common.ValidatePic.SetSession(System.String,System.String)">
            <summary>
            设置验证码字符串
            </summary>
        </member>
        <member name="M:Soholife.Common.ValidatePic.rndStr(System.Int32)">
            <summary>
            生成随机长度的图片验证字符串
            </summary>
            <param name="iLen"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidatePic.rndStr_CN(System.Int32)">
            <summary>
            生成随机长度的图片验证字符串
            </summary>
            <param name="iLen"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidatePic.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="srcBmp"></param>
            <param name="bXDir"></param>
            <param name="nMultValue">波形的幅度倍数</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsOutLength(System.Int32,System.Int32,System.String)">
            <summary>
            验证长度是否超出限制
            </summary>
            <param name="iMin">最小长度</param>
            <param name="iMax">最大长度</param>
            <param name="str">验证字符串</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsUrl(System.String)">
            <summary>
            是否为正确的URL地址
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsTime(System.String)">
            <summary>
            是否为时间格式
            </summary>
            <param name="str">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsQQ(System.String)">
            <summary>
            是否符合QQ号规则（5位以上QQ）
            </summary>
            <param name="str">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsNumeric(System.String,System.Int32,System.Int32)">
            <summary>
            是否特定长度范围内的纯数字字符串(不可带正负号)
            </summary>
            <param name="str">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsNumeric(System.String)">
            <summary>
            是否数字字符串(可带正负号)
            </summary>
            <param name="str">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsDecimal(System.String)">
            <summary>
            是否是浮点数(可带正负号)
            </summary>
            <param name="str">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsIncludeChinese(System.String)">
            <summary>
            检测是否包含有中文字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsEmail(System.String)">
            <summary>
            检测是否邮件地址格式正确
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsPhone(System.String)">
            <summary>
            是否中国电话。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsMobile(System.String)">
            <summary>
            是否是中国手机
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsCmMobio(System.String)">
            <summary>
            是否是移动手机
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsDate(System.String)">
            <summary>
            是否是日期类型字符串(最笨的方式)
            </summary>
            <param name="sDate"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsChineseChar(System.Char)">
            <summary>
            是否当前字符是否是中文
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsIP(System.String)">
            <summary>
            判断字符串是否为有效的 IP 地址。
            </summary>
            <param name="ip">IP 地址字符串。</param>
            <returns>返回表示是与否的 <see cref="T:System.Boolean"/> 变量。</returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsCardID(System.String)">
            <summary>
            判断身份证号码是否有效
            </summary>
            <param name="personalid"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsMobileOrPhoen(System.String)">
            <summary>
            是否是中国手机或固话
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.ValidateUtils.IsMobileOrPhone(System.String)">
            <summary>
            是否是中国手机或固话
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.HtmlFilter(System.String)">
            <summary>
            HTML字符串过滤，仅保留安全HTML标签
            </summary>
            <param name="html">字符串</param>
            <returns>过滤后的字符串</returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.HtmlFilter(System.String,System.Boolean)">
            <summary>
            HTML字符串过滤，仅保留安全HTML标签
            </summary>
            <param name="html">字符串</param>
            <returns>过滤后的字符串</returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.CleanHtml(System.String)">
            <summary>
            清除HTML代码
            </summary>
            <param name="html">字符串</param>
            <returns>清除后的字符串</returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.JavascriptFilter(System.String)">
            <summary>
            过滤Javascript代码
            </summary>
            <param name="html">字符串</param>
            <returns>过滤后的字符串</returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.ChangeHtmlToJs(System.String)">
            <summary>
            转换HTML代码为JS代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.DealImgInfo(System.String,System.Int32,System.Int32)">
            <summary>
            处理图片信息
            </summary>
            <param name="sContent"></param>
            <param name="iMaxHeight"></param>
            <param name="iMaxWidth"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.HtmlToText(System.String)">
            <summary>
            简单转换，将HTML代码，转换为可以在浏览器显示的文本信息
            </summary>
            <param name="sSource"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.TextToHtml(System.String)">
            <summary>
            简单转换，将文本信息转换为HTML代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.Escape(System.String)">
            <summary>
            完成特殊字符的编码转换 类似（Microsoft.JScript.GlobalObject.escape）
            </summary>
            <param name="sSource"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.LoadHtmlTag">
            <summary>
            加载HTML标签
            </summary>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.LoadHtmlAttribute">
            <summary>
            加载HTML属性
            </summary>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.DeleteStr(System.String,System.String,System.String,System.String)">
            <summary>
            删除特定段中的标签间信息
            </summary>
            <param name="content"></param>
            <param name="lower"></param>
            <param name="startstr"></param>
            <param name="endstr"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.HtmlUtils.CheckHtmlAttribute(System.String)">
            <summary>
            检查HTML属性是否被允许
            </summary>
            <param name="sTag">HTML标签</param>
            <returns>过滤后的字符串</returns>
        </member>
        <member name="T:Soholife.Common.Report">
            <summary>
            Report 的摘要说明。
            </summary>
        </member>
        <member name="M:Soholife.Common.Report.ShowMsg(System.Boolean,System.String,System.String)">
            <summary>
            返回操作信息页
            </summary>
            <param name="Action">当前操作是否成功</param>
            <param name="GoUrl">跳转页面</param>
            <param name="SendMsg">发送信息，每条信息以"|"开头</param>
        </member>
        <member name="M:Soholife.Common.Report.ShowMsg(System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            返回操作信息页
            </summary>
            <param name="Action">当前操作是否成功</param>
            <param name="GoUrl">跳转页面</param>
            <param name="SendMsg">发送信息，每条信息以"|"开头</param>
        </member>
        <member name="M:Soholife.Common.Report.ShowMsg(System.Boolean,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            返回操作信息页
            </summary>
            <param name="Action">当前操作是否成功</param>
            <param name="GoUrl">跳转页面</param>
            <param name="SendMsg">发送信息，每条信息以"|"开头</param>
        </member>
        <member name="M:Soholife.Common.Report.GetCloseMsgTemplate(System.Boolean)">
            <summary>
            取得信息关闭通用模版
            </summary>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetIP">
            <summary>
            得到IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetIPNumber">
            <summary>
            得到数字IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetIPNumber(System.String)">
            <summary>
            得到数字IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetLocation(System.String)">
            <summary>
            通过IP，得到所在地区
            </summary>
            <param name="sIP"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetLocation(System.String,System.String)">
            <summary>
            通过IP，得到所在地区
            </summary>
            <param name="sIP"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetRefer">
            <summary>
            得到来源页
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetUrl(System.Boolean)">
            <summary>
            得到当前页地址
            </summary>
            <param name="bIncludeDomain">是否返回包含页面得域名信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetBrowserVersion">
            <summary>
            获取浏览器及版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetSystemName">
            <summary>
            获取当前操作系统名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.RequetUtils.GetOSNameByUserAgent(System.String)">
            <summary>
            根据 User Agent 获取操作系统名称
            </summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.UploadUtils.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Soholife.Common.UploadUtils.Upload(System.Web.HttpPostedFile)">
            <summary>
            具体执行上传的操作
            </summary>
        </member>
        <member name="M:Soholife.Common.UploadUtils.Upload(System.Web.UI.HtmlControls.HtmlInputFile)">
            <summary>
            具体执行上传的操作
            </summary>
        </member>
        <member name="M:Soholife.Common.UploadUtils.IsFileAllowUpload(System.String)">
            <summary>
            判断是否文件容许上传
            </summary>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.UploadUtils.GetRndFileName(System.String)">
            <summary>
            得到随机文件名
            </summary>
            <param name="sFileType"></param>
            <returns></returns>
        </member>
        <member name="P:Soholife.Common.UploadUtils.SaveName">
            <summary>
            指定存储文件的名称（不包含后缀名称）
            </summary>
        </member>
        <member name="P:Soholife.Common.UploadUtils.SavePath">
            <summary>
            图片存储，磁盘路径
            </summary>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetPageHeader(System.String)">
            <summary>
            得到特定页面头内容
            </summary>
            <param name="sUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetPageContent(System.String)">
            <summary>
            得到特定页面内容
            </summary>
            <param name="sUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetPageContent(System.String,System.String)">
            <summary>
            得到特定页面信息内容
            </summary>
            <param name="sUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetPageContent(System.String,System.Text.Encoding)">
            <summary>
            得到特定页面信息内容
            </summary>
            <param name="sUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.PostPageContent(System.String,System.String)">
            <summary>
            使用Post方式提交信息，默认使用utf-8的方式
            </summary>
            <param name="posturl"></param>
            <param name="postData"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.PostPageContent(System.String,System.String,System.String)">
            <summary>
            使用Post方式提交信息
            </summary>
            <param name="posturl"></param>
            <param name="postData"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.PostPageContent(System.String,System.String,System.Text.Encoding)">
            <summary>
            使用Post方式提交信息
            </summary>
            <param name="posturl"></param>
            <param name="postData"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.PostPageStatusCode(System.String,System.String,System.Text.Encoding)">
            <summary>
            使用Post方式提交信息
            </summary>
            <param name="posturl"></param>
            <param name="postData"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetImagesFromUrl(System.String)">
            <summary>
            得到给定的Url中包含的所有images
            </summary>
            <param name="url"></param>
            <returns>当前页面中的所有images数组</returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetLinksFromUrl(System.String,System.Boolean)">
            <summary>
            得到给定的Url中包含的所有Urls
            </summary>
            <param name="url"></param>
            <param name="makeLinkable"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.SelectContrItemByValue(System.Object,System.Web.UI.WebControls.CheckBoxList)">
            <summary>
            设置DropDownList当前的默认选中项
            </summary>
            <param name="oKey"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.SelectContrItemByValue(System.String,System.Web.UI.WebControls.CheckBoxList)">
            <summary>
            设置DropDownList当前的默认选中项
            </summary>
            <param name="sKey"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.SelectContrItemByValue(System.Object,System.Web.UI.WebControls.DropDownList)">
            <summary>
            设置DropDownList当前的默认选中项
            </summary>
            <param name="oKey"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.SelectContrItemByValue(System.String,System.Web.UI.WebControls.DropDownList)">
            <summary>
            设置DropDownList当前的默认选中项
            </summary>
            <param name="sKey"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.DropDownListSource(System.Data.DataTable,System.Web.UI.WebControls.DropDownList,System.String,System.String)">
            <summary>
            绑定DropDownList列表
            </summary>
            <param name="dt"></param>
            <param name="obj"></param>
            <param name="strText"></param>
            <param name="strValue"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.SelectContrItemByValue(System.Object,System.Web.UI.WebControls.RadioButtonList)">
            <summary>
            设置RadioButtonList当前的默认选中项
            </summary>
            <param name="oKey"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.SelectContrItemByValue(System.String,System.Web.UI.WebControls.RadioButtonList)">
            <summary>
            设置RadioButtonList当前的默认选中项
            </summary>
            <param name="sKey"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetHtmlTitle(System.Object,System.Object)">
            <summary>
            得到特定显示标题
            </summary>
            <param name="oTitle"></param>
            <param name="oColor"></param>
            <param name="oIsStrong"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetHtmlTitle(System.Object,System.Object,System.Object)">
            <summary>
            得到特定显示标题
            </summary>
            <param name="oTitle"></param>
            <param name="oColor"></param>
            <param name="oIsStrong"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetHtmlTitle(System.String,System.String,System.Boolean)">
            <summary>
            得到特定显示标题
            </summary>
            <param name="oTitle"></param>
            <param name="oColor"></param>
            <param name="oIsStrong"></param>
        </member>
        <member name="M:Soholife.Common.WebUtils.GetMailSite(System.String)">
            <summary>
            获取邮箱登录地址
            </summary>
            <param name="sEmail">Email地址</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.HttpUploadFile(System.String,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="uploadfile">要提交的文件位置如</param>
            <param name="url">接受文件的web地址如 http://www.yourserver.com/upload.dll</param>
            <param name="fileFormName">窗体名称</param>
            <param name="contenttype">文件内容类型</param>
            <param name="querystring">参数的一个集合</param>
            <param name="cookies">Cookies信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.HttpUploadFile(System.String,System.String,System.String,System.Net.CookieContainer)">
            <summary>
            上传文件
            </summary>
            <param name="uploadfile">要提交的文件位置如</param>
            <param name="url">接受文件的web地址如 http://www.yourserver.com/upload.dll</param>
            <param name="fileFormName">窗体名称</param>
            <param name="contenttype">文件内容类型</param>
            <param name="querystring">参数的一个集合</param>
            <param name="cookies">Cookies信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.HttpUploadFile(System.String,System.String,System.String,System.String,System.Net.CookieContainer)">
            <summary>
            上传文件
            </summary>
            <param name="uploadfile">要提交的文件位置如</param>
            <param name="url">接受文件的web地址如 http://www.yourserver.com/upload.dll</param>
            <param name="fileFormName">窗体名称</param>
            <param name="contenttype">文件内容类型</param>
            <param name="querystring">参数的一个集合</param>
            <param name="cookies">Cookies信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.HttpUploadFile(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String,System.Net.CookieContainer)">
            <summary>
            上传文件
            </summary>
            <param name="uploadfile">要提交的文件位置如</param>
            <param name="url">接受文件的web地址如 http://www.yourserver.com/upload.dll</param>
            <param name="fileFormName">窗体名称</param>
            <param name="contenttype">文件内容类型</param>
            <param name="querystring">参数的一个集合</param>
            <param name="cookies">Cookies信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.HttpUploadFile(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Byte[],System.String,System.String,System.Net.CookieContainer)">
            <summary>
            上传文件
            </summary>
            <param name="uploadfile">要提交的文件位置如</param>
            <param name="url">接受文件的web地址如 http://www.yourserver.com/upload.dll</param>
            <param name="fileFormName">窗体名称</param>
            <param name="contenttype">文件内容类型</param>
            <param name="querystring">参数的一个集合</param>
            <param name="cookies">Cookies信息</param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.HttpDownLoadFile(System.String)">
            <summary>
            获取远程文件的数据流
            </summary>
            <param name="sUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.WebUtils.HttpDownLoadAndSaveFile(System.String,System.String,System.String)">
            <summary>
            获取远程文件的数据流
            </summary>
            <param name="sUrl"></param>
            <returns></returns>
        </member>
        <member name="F:Soholife.Common.XmlAnalytical.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="F:Soholife.Common.XmlAnalytical._errorMgs">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="M:Soholife.Common.XmlAnalytical.DictionaryToXml(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            获得XML字符串
            </summary>
            <param name="inputPara"></param>
            <returns></returns>
        </member>
        <member name="M:Soholife.Common.XmlAnalytical.XmlToSortedDictionary(System.String)">
            <summary>
            获得字典集合
            </summary>
            <param name="sXml"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Soholife.Common.XmlAnalytical.Filter(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Soholife.Common.XmlAnalytical.ParseFormXml``1(System.String)">
            <summary>
            把XML字符串还原为对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sXml">XML字符串</param>
            <returns>对象实体</returns>
        </member>
        <member name="M:Soholife.Common.XmlAnalytical.ParseFormXml``1(System.String,System.Text.Encoding)">
            <summary>
            把XML字符串还原为对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sXml">XML字符串</param>
            <param name="oEncode">编码格式</param>
            <returns>对象实体</returns>
        </member>
        <member name="M:Soholife.Common.XmlAnalytical.Serialize``1(``0)">
            <summary>
            序列号对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="t">待序列化对象</param>
            <returns>XML字符串</returns>
        </member>
        <member name="M:Soholife.Common.XmlAnalytical.Serialize``1(``0,System.Text.Encoding)">
            <summary>
            序列号对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="t">待序列化对象</param>
            <param name="oEncode">字符编码</param>
            <returns>XML字符串</returns>
        </member>
        <member name="P:Soholife.Common.XmlAnalytical.XML">
            <summary>
            XML字符串
            </summary>
        </member>
        <member name="P:Soholife.Common.XmlAnalytical.Parameter">
            <summary>
            获得的Post参数集合
            </summary>
        </member>
        <member name="F:Soholife.Common.XmlAnalyticalErrorCode.NoneError">
            <summary>
            None错误
            </summary>
        </member>
        <member name="F:Soholife.Common.XmlAnalyticalErrorCode.XmlFormatError">
            <summary>
            Xml格式错误
            </summary>
        </member>
        <member name="M:Soholife.Common.ZipHelper.ZipFile(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            压缩字符串
            </summary>
            <param name="strText">字符串</param>
            <param name="zipFileName">压缩文本文件名称</param>
            <param name="zipFilePath">压缩文件路径</param>
            <param name="password">加密密码</param>
            <param name="errorText">错误信息</param>
            <returns>true：压缩成功；false：压缩失败</returns>
        </member>
        <member name="M:Soholife.Common.ZipHelper.ZipFile(System.String,System.String,System.String@)">
            <summary>
            压缩文件
            </summary>
            <param name="filePath">指定的压缩文件路径</param>
            <param name="zipFilePath">压缩后的文件路径</param>
            <param name="errorText">错误信息</param>
            <returns>true：压缩成功；false：压缩失败</returns>
        </member>
        <member name="M:Soholife.Common.ZipHelper.ZipFile(System.String,System.String,System.String,System.String@)">
            <summary>
            压缩文件
            </summary>
            <param name="filePath">指定的压缩文件路径</param>
            <param name="zipFilePath">压缩后的文件路径</param>
            <param name="password">加密密码</param>
            <param name="errorText">错误信息</param>
            <returns>true：压缩成功；false：压缩失败</returns>
        </member>
        <member name="M:Soholife.Common.ZipHelper.UnzipFile(System.String,System.String,System.String@)">
            <summary>
            解压文件
            </summary>
            <param name="zipFilePath">需要的解压文件路径</param>
            <param name="filePath">解出文件路径</param>
            <param name="errorText">错误信息</param>
            <returns>true：解压成功；false：解压失败</returns>
        </member>
        <member name="M:Soholife.Common.ZipHelper.UnzipFile(System.String,System.String,System.String,System.String@)">
            <summary>
            解压文件
            </summary>
            <param name="zipFilePath">需要解压的文件路径</param>
            <param name="filePath">解出的文件路径</param>
            <param name="password">解密密码</param>
            <param name="errorText">错误信息</param>
            <returns>true：解压成功；false：解压失败</returns>
        </member>
    </members>
</doc>
